@page
@model SarasBlogg.Pages.AboutMeModel
@{
	ViewData["Title"] = "Om Mig";
}
<div class="container-site">
	@if (User.IsInRole("superadmin"))
	{
		<!-- Tre-punkts knapp -->
		<div class="mt-2 three-dots-container"> 
			<button class="btn btn-outline-secondary btn-sm rounded-circle d-flex align-items-center justify-content-center three-dots-btn"
			type="button"
			data-bs-toggle="modal"
			data-bs-target="#aboutMeFormModal">

				<span class="three-dots-icon">
					<span class="three-dot">&#x2022;</span>
					<span class="three-dot">&#x2022;</span>
					<span class="three-dot">&#x2022;</span>
				</span>
			</button>
		</div>
	}
	@if (Model.AboutMe != null && (!string.IsNullOrWhiteSpace(Model.AboutMe.Title) || !string.IsNullOrWhiteSpace(Model.AboutMe.Content)))
	{
		<div class="d-flex align-items-start gap-4 aboutme-wrapper">
			@if (!string.IsNullOrWhiteSpace(Model.AboutMe.Image))
			{
				<div>
					<img class="aboutme-img"
						 src="@(Model.AboutMe.Image)"
						 onerror="this.onerror=null; this.src='/img/blogg/default.png';"
						 alt="Om Mig-bild" />
				</div>
			}
			<div>
				<h3 class="blogg-title">@Model.AboutMe.Title</h3>
				<p class="blogg-content linebreak">@Model.AboutMe.Content</p>
			</div>
		</div>
	}
	else
	{
		<p>Om mig-sektionen är ännu inte skapad.</p>
	}

	<!-- Modal för formulär -->
		<div class="modal fade" id="aboutMeFormModal" tabindex="-1" aria-labelledby="aboutMeFormModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="aboutMeFormModalLabel">Redigera Om Mig</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
					</div>
					<div class="modal-body">
					<form id="aboutMeForm" method="post" enctype="multipart/form-data" novalidate>
							<input asp-for="AboutMe.Id" type="hidden" />
							<input asp-for="AboutMe.UserId" type="hidden" />
							<label asp-for="AboutMe.Title"></label>
							<input asp-for="AboutMe.Title" class="form-control" placeholder="Ange titel här" maxlength="100" />
							<span asp-validation-for="AboutMe.Title" class="text-danger"></span>
							<br />
							<label asp-for="AboutMe.Content"></label>
							<textarea asp-for="AboutMe.Content" class="form-control" placeholder="Ange innehåll här" rows="10" cols="60"></textarea>
							<span asp-validation-for="AboutMe.Content" class="text-danger"></span>
							<br />
							<!-- Bildhantering -->
							<label asp-for="AboutMe.Image"></label>
							<input asp-for="AboutMeImage" type="file" /> <!--Ändra inte denna till en .-->
							<br />
						<input type="hidden" name="CroppedImageData" id="croppedData" />

						@if (!string.IsNullOrEmpty(Model.AboutMe.Image))
						{
							<div class="mb-3">
								<label>Nuvarande bild:</label><br />
								<img class="card-img-bottom admin-blog-img"
									 src="@(string.IsNullOrWhiteSpace(Model.AboutMe.Image) ? "/img/blogg/default.png" : Model.AboutMe.Image)"
									 onerror="this.onerror=null; this.src='/img/blogg/default.png';"
									 alt="Om Mig-miniatyr" />
								<br />
								<div class="form-check mt-2">
									<input class="form-check-input" type="checkbox" asp-for="RemoveImage" id="removeImageCheckbox" />
									<label class="form-check-label" for="removeImageCheckbox">Ta bort bild</label>
								</div>
							</div>
						}
							else
							{
								<p>Ingen bild vald.</p>
							}
							<br />
						<button type="submit" class="btn btn-success" data-busy-text="Sparar…">Spara ändringar</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	<!-- Cropper-modal -->
	<div class="modal fade" id="cropperModal"
		 tabindex="-1" aria-hidden="true"
		 data-bs-backdrop="static" data-bs-keyboard="false">
		<div class="modal-dialog modal-lg modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Beskär bild</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
				</div>
				<div class="modal-body">
					<!-- Stabil yta: cropper får äga storlek och overlay själv -->
					<div id="cropperWrap" class="border rounded" style="height:70vh;">
						<img id="cropperImage"
							 alt="Crop source"
							 style="display:block; width:100%; max-width:100%; height:auto;">
					</div>

				</div>
				<div class="modal-footer">
					<button type="button" id="applyCropBtn" class="btn btn-primary">Använd beskärning</button>
				</div>
			</div>
		</div>
	</div>

</div>
@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.6.2/dist/cropper.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/cropperjs@1.6.2/dist/cropper.min.css" rel="stylesheet" />

	<style>
		/* Flytta rutan genom att dra inuti den */
		.cropper-face {
			cursor: move !important;
			background-color: rgba(255,255,255,0.001) !important; /* tunn för bättre hit-test */
		}

		/* Låt handtagen/kanter få events igen (behövs för resize) */
		.cropper-line,
		.cropper-point,
		.cropper-dashed {
			pointer-events: auto !important;
		}

		/* Gör handtagen lite tydligare och lättare att träffa (valfritt) */
		.cropper-point {
			width: 10px;
			height: 10px;
			opacity: .95;
			background: #fff;
		}

		/* Behåll outline för visuell feedback */
		.cropper-view-box,
		.cropper-face {
			outline: 1px solid rgba(255,255,255,.85);
		}
	</style>

	<script>
		document.addEventListener("DOMContentLoaded", () => {
		  const form      = document.getElementById("aboutMeForm");
		  const fileInput = document.querySelector('input[name="AboutMeImage"]');
		  const modalEl   = document.getElementById("cropperModal");
		  const imgEl     = document.getElementById("cropperImage");
		  const applyBtn  = document.getElementById("applyCropBtn");
		  const hiddenOut = document.getElementById("croppedData");

		  const bsModal = new bootstrap.Modal(modalEl);
		  let cropper = null;
		  let objectUrl = null;

		function initCropper() {
		  if (cropper) { cropper.destroy(); }

		  cropper = new Cropper(imgEl, {
			// Bild ska ligga helt inom containern (hindrar konstiga offset)
			viewMode: 2,

			// Alltid kvadrat
			aspectRatio: 1,
			autoCrop: true,
			autoCropArea: 0.8,
			responsive: true,

			// 🔒 Lås bilden – vi vill endast flytta/ändra BESKÄRNINGSRUTAN
			dragMode: 'none',       // förhindrar "rita ny box" vid drag på bilden
			movable: false,         // lås canvas/bild
			zoomable: false,
			zoomOnWheel: false,
			zoomOnTouch: false,
			toggleDragModeOnDblclick: false,

			// ✅ Tillåt att rutan flyttas och ändras i storlek
			cropBoxMovable: true,
			cropBoxResizable: true,

			background: false,
			center: true,
			guides: true,
			highlight: true,

			ready() {
			  const c = this.cropper;
			  c.reset(); // säkerställ fit/centrering

			  // Lägg en start-ruta centrerad (~60% av kortaste sidan)
			  const img = c.getImageData();
			  const size = Math.min(img.width, img.height) * 0.6;
			  c.setCropBoxData({
				left: img.left + (img.width  - size) / 2,
				top:  img.top  + (img.height - size) / 2,
				width: size,
				height: size
			  });
			}
		  });
		}

		  // Auto-öppna när ny fil väljs
		  fileInput?.addEventListener("change", () => {
			hiddenOut.value = "";
			if (objectUrl) { URL.revokeObjectURL(objectUrl); objectUrl = null; }

			if (fileInput.files && fileInput.files[0]) {
			  objectUrl = URL.createObjectURL(fileInput.files[0]);
			  imgEl.onload = () => { imgEl.onload = null; bsModal.show(); };
			  imgEl.src = objectUrl;
			} else {
			  imgEl.removeAttribute('src');
			}
		  });

		  modalEl.addEventListener('shown.bs.modal', initCropper);

		  modalEl.addEventListener('hidden.bs.modal', () => {
			if (cropper) { cropper.destroy(); cropper = null; }
			if (document.querySelector('.modal.show')) {
			  document.body.classList.add('modal-open');
			  const backs = document.querySelectorAll('.modal-backdrop');
			  if (backs.length > 1) for (let i = 0; i < backs.length - 1; i++) backs[i].remove();
			}
		  });

		  applyBtn?.addEventListener("click", () => {
			if (!cropper) return;
			const canvas = cropper.getCroppedCanvas({ width: 800, height: 800 });
			hiddenOut.value = canvas.toDataURL("image/png");
			bsModal.hide();
		  });

		  // Busy-knapp
		  form?.addEventListener("submit", (e) => {
			if (!form.checkValidity()) return;
			const btn = e.submitter;
			if (!btn) return;
			if (btn.disabled) { e.preventDefault(); return; }
			const busyText = btn.getAttribute("data-busy-text") || "Sparar…";
			btn.disabled = true;
			btn.textContent = busyText;
		  });
		});
	</script>
}
