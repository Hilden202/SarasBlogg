@using SarasBlogg.Extensions
@using SarasBlogg.Models
@using SarasBlogg.DTOs

@model SarasBlogg.ViewModels.BloggViewModel

<div class="container-site">
    @if (Model.Blogg == null || Model.Blogg.Hidden)
    {
        var filteredBloggs = (Model.Bloggs ?? new List<Blogg>())
        .Where(b => (Model.IsArchiveView ? b.IsArchived : !b.IsArchived)
        && !b.Hidden
        && b.LaunchDate <= DateTime.UtcNow)
        .OrderByDescending(b => b.LaunchDate)
        .ThenByDescending(b => b.Id);

        foreach (var blogg in filteredBloggs)
        {
            var imageUrl = blogg.Images?
            .OrderBy(i => i.Order)
            .FirstOrDefault()?.FilePath;

            var resolvedUrl = (!string.IsNullOrEmpty(imageUrl) &&
            (imageUrl.StartsWith("http://") || imageUrl.StartsWith("https://")))
            ? imageUrl
            : Url.Content(imageUrl ?? "/img/blogg/default.png");

            <a asp-route-showId="@blogg.Id"
               class="text-decoration-none blogg-link"
               id="reloadPageFormSection-@blogg.Id"
               data-blogg-id="@blogg.Id">
                <div class="card m-2 shadow-lg mx-auto">
                    <div class="card-body">
                        <div class="card-img-wrapper mb-2" style="--img: url('@resolvedUrl')">
                            <img class="bloggimg mb-4 shadow-lg"
                                 src="@resolvedUrl"
                                 onerror="this.onerror=null; this.src='/img/blogg/default.png';"
                                 alt="Bild för @blogg.Title" />
                        </div>
                        <h5 class="card-title mb-3">@blogg.Title</h5>
                        <p class="card-text">@blogg.Content.LimitLength(120)</p>
                        <p class="text-faded">
                            <small class="text-faded">
                                Publicerad: @blogg.LaunchDate.ToString("yyyy-MM-dd")
                                <br />
                                @Model.Comments?.Count(c => c.BloggId == blogg.Id)
                                @(Model.Comments?.Count(c => c.BloggId == blogg.Id) == 1 ? "Kommentar" : "Kommentarer")
                                @if (User.IsInRole("admin") || User.IsInRole("superadmin") || User.IsInRole("superuser"))
                                {
                                    <br />
                                    <span class="badge bg-info mt-2 d-inline-block">Visningar: @blogg.ViewCount</span>
                                }
                            </small>
                        </p>
                    </div>
                </div>
            </a>
        }
    }
    else
    {
        @* --- DETALJVY MED KARUSELL --- *@
        var images = (Model.Blogg.Images ?? new List<BloggImageDto>())
        .OrderBy(i => i.Order).ToList();
        var carouselId = $"blogCarousel-{Model.Blogg.Id}";

        <div class="card m-2 shadow-lg mx-auto" id="bloggTopSection">
            <div class="card-body">

                @if (images.Count <= 1)
                {
                    var firstUrl = images.FirstOrDefault()?.FilePath;
                    var resolved = !string.IsNullOrWhiteSpace(firstUrl) &&
                    (firstUrl.StartsWith("http://") || firstUrl.StartsWith("https://"))
                    ? firstUrl
                    : Url.Content(firstUrl ?? "/img/blogg/default.png");

                    <div class="card-img-wrapper mb-2" style="--img: url('@resolved')">
                        <img class="bloggimg mb-4 rounded shadow-lg js-lightbox"
                             src="@resolved"
                             onerror="this.onerror=null; this.src='/img/blogg/default.png';"
                             alt="Bloggbild"
                             style="cursor:zoom-in" />
                    </div>
                }
                else
                {
                    <div id="@carouselId" class="carousel slide mb-2" data-bs-interval="false">
                        <div class="carousel-inner">
                            @for (var i = 0; i < images.Count; i++)
                            {
                                var url = images[i].FilePath;
                                var resolved = !string.IsNullOrWhiteSpace(url) &&
                                (url.StartsWith("http://") || url.StartsWith("https://"))
                                ? url
                                : Url.Content(url ?? "/img/blogg/default.png");

                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <div class="card-img-wrapper" style="--img: url('@resolved')">
                                        <img class="bloggimg mb-4 rounded shadow-lg js-lightbox"
                                             src="@resolved"
                                             onerror="this.onerror=null; this.src='/img/blogg/default.png';"
                                             alt="Bloggbild @(i + 1)"
                                             style="cursor:zoom-in" />
                                    </div>
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Föregående</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Nästa</span>
                        </button>

                        <div class="carousel-indicators">
                            @for (var i = 0; i < images.Count; i++)
                            {
                                <button type="button"
                                        data-bs-target="#@carouselId"
                                        data-bs-slide-to="@i"
                                        class="@(i==0 ? "active" : "")"
                                        aria-current="@(i==0 ? "true" : "false")"
                                        aria-label="Bild @(i+1)"></button>
                            }
                        </div>
                    </div>
                        <div class="thumb-strip mt-2" aria-label="Bildminiatyrer">
                            @for (var i = 0; i < images.Count; i++)
                            {
                                var url = images[i].FilePath;
                                var resolvedThumb = !string.IsNullOrWhiteSpace(url) &&
                                (url.StartsWith("http://") || url.StartsWith("https://"))
                                ? url
                                : Url.Content(url ?? "/img/blogg/default.png");

                                <button type="button"
                                        class="thumb @(i == 0 ? "active" : "")"
                                        data-carousel-id="@carouselId"
                                        data-index="@i"
                                        aria-label="Visa bild @(i + 1)"
                                        aria-current="@(i == 0 ? "true" : "false")">
                                    <img src="@resolvedThumb"
                                         alt="Miniatyr för bild @(i + 1)"
                                         loading="lazy" />
                                </button>
                            }
                        </div>
                }
                <a href="javascript:history.back()" class="btn btn-outline-secondary mb-3">
                    &larr; Tillbaka
                </a>

                <h3 class="card-title mb-3">@Model.Blogg.Title</h3>
                <p class="card-text linebreak">@Model.Blogg.Content</p>
                <p class="text-faded">
                    <strong>Författare:</strong> @Model.Blogg.Author<br />
                    <strong>Publicerad:</strong> @Model.Blogg.LaunchDate.ToString("yyyy-MM-dd")
                    @if (User.IsInRole("admin") || User.IsInRole("superadmin") || User.IsInRole("superuser"))
                    {
                        <br />
                        <span class="badge bg-info mt-2 d-inline-block">Visningar: @Model.Blogg.ViewCount</span>
                    }
                </p>
                <hr class="mb-3" />
            </div>
        </div>
    }
</div>

<!-- Fullscreen Image Modal -->
<div class="modal fade" id="imageLightbox" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content bg-black">
            <div class="modal-body p-0 d-flex align-items-center justify-content-center">
                <img id="lightboxImg" alt="Bloggbild"
                     style="max-width:100vw; max-height:100vh; object-fit:contain; cursor:zoom-out;" />
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('click', function (e) {
        const img = e.target.closest('.js-lightbox');
        if (!img) return;

        document.getElementById('lightboxImg').src = img.src;

        const modalEl = document.getElementById('imageLightbox');
        const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
        modal.show();
    });

    document.getElementById('lightboxImg').addEventListener('click', function () {
        const modalEl = document.getElementById('imageLightbox');
        const modal = bootstrap.Modal.getInstance(modalEl);
        if (modal) modal.hide();
    });
</script>
