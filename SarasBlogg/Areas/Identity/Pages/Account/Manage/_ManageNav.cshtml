@using SarasBlogg.Data
@inject SignInManager<ApplicationUser> SignInManager
@{
	var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
	<li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Konto</a></li>
	<li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
	<li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Lösenord</a></li>
	@* Dölj "Sätt lösenord", "External logins" och "Two-factor authentication" tills de är helt API-baserade *@
	@* <li class="nav-item"><a class="nav-link @ManageNavPages.SetPasswordNavClass(ViewContext)" asp-page="./SetPassword">Sätt lösenord</a></li> *@
	@* <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li> *@
	@* <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li> *@

	<li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personlig data" asp-page="./PersonalData">Personlig data</a></li>

	@if (User.IsInRole("superadmin"))
	{

		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Register">
				Skapa ny användare
			</a>
		</li>
	}
</ul>
